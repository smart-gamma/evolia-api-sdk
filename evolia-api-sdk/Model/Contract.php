<?php
/**
 * Contract
 *
 * PHP version 5
 *
 * @category Class
 * @package  Evolia
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Evolia
 *
 * Connection of Troops & Evolia
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.10
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Evolia\Model;

use \ArrayAccess;
use \Evolia\ObjectSerializer;

/**
 * Contract Class Doc Comment
 *
 * @category Class
 * @package  Evolia
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Contract implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Contract';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'idContrat' => 'int',
'idPersonne' => 'int',
'idClient' => 'int',
'ordreClient' => 'int',
'designation' => 'string',
'adresse1' => 'string',
'adresse2' => 'string',
'adresse3' => 'string',
'cP' => 'string',
'commune' => 'string',
'insee' => 'string',
'pays' => 'string',
'telephone' => 'string',
'fax' => 'string',
'email' => 'string',
'aPE' => 'string',
'tVAPays' => 'string',
'tVAClef' => 'string',
'sIREN' => 'string',
'nIC' => 'string',
'referenceAnalytique' => 'string',
'agence' => 'string',
'codeMission' => 'string',
'debut' => 'string',
'finPrevue' => 'string',
'finReelle' => 'string',
'dateCreation' => 'string',
'categorieSalariale' => 'string',
'motifEmbauche' => 'string',
'justification' => 'string',
'missionARisqueL23131' => 'bool',
'finDeMission' => 'string',
'heureDePresentation' => 'string',
'typeContrat' => 'string',
'dateEffet' => 'string',
'dateFinAvenant' => 'string',
'souplesseDebut' => 'string',
'souplesseFin' => 'string',
'horairesParticulier' => 'string',
'retourSignatureerimaire' => 'bool',
'retourSignatureClient' => 'bool',
'tauxPaye' => 'int',
'tauxFacture' => 'int',
'lotFacture' => 'string',
'dureeHebdo' => 'string',
'horaireCollectifMoyen' => 'string',
'idMetier' => 'int',
'metier' => 'string',
'poste' => 'string',
'seuilEtDecompte' => 'string',
'salaireReference1' => 'string',
'salaireReference2' => 'string',
'salaireReference3' => 'string',
'salaireReference4' => 'string',
'salaireReference5' => 'string',
'salaireReference6' => 'string',
'salaireReference7' => 'string',
'salaireReference8' => 'string',
'salaireReference9' => 'string',
'salaireReference10' => 'string',
'description1' => 'string',
'description2' => 'string',
'description3' => 'string',
'protection1' => 'string',
'protection2' => 'string',
'protection3' => 'string',
'risque1' => 'string',
'risque2' => 'string',
'risque3' => 'string',
'moyenAcces' => 'string',
'periodeFermeture' => 'string',
'codePCS' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'idContrat' => null,
'idPersonne' => null,
'idClient' => null,
'ordreClient' => null,
'designation' => null,
'adresse1' => null,
'adresse2' => null,
'adresse3' => null,
'cP' => null,
'commune' => null,
'insee' => null,
'pays' => null,
'telephone' => null,
'fax' => null,
'email' => null,
'aPE' => null,
'tVAPays' => null,
'tVAClef' => null,
'sIREN' => null,
'nIC' => null,
'referenceAnalytique' => null,
'agence' => null,
'codeMission' => null,
'debut' => null,
'finPrevue' => null,
'finReelle' => null,
'dateCreation' => null,
'categorieSalariale' => null,
'motifEmbauche' => null,
'justification' => null,
'missionARisqueL23131' => null,
'finDeMission' => null,
'heureDePresentation' => null,
'typeContrat' => null,
'dateEffet' => null,
'dateFinAvenant' => null,
'souplesseDebut' => null,
'souplesseFin' => null,
'horairesParticulier' => null,
'retourSignatureerimaire' => null,
'retourSignatureClient' => null,
'tauxPaye' => null,
'tauxFacture' => null,
'lotFacture' => null,
'dureeHebdo' => null,
'horaireCollectifMoyen' => null,
'idMetier' => null,
'metier' => null,
'poste' => null,
'seuilEtDecompte' => null,
'salaireReference1' => null,
'salaireReference2' => null,
'salaireReference3' => null,
'salaireReference4' => null,
'salaireReference5' => null,
'salaireReference6' => null,
'salaireReference7' => null,
'salaireReference8' => null,
'salaireReference9' => null,
'salaireReference10' => null,
'description1' => null,
'description2' => null,
'description3' => null,
'protection1' => null,
'protection2' => null,
'protection3' => null,
'risque1' => null,
'risque2' => null,
'risque3' => null,
'moyenAcces' => null,
'periodeFermeture' => null,
'codePCS' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'idContrat' => 'IdContrat',
'idPersonne' => 'IdPersonne',
'idClient' => 'IdClient',
'ordreClient' => 'OrdreClient',
'designation' => 'Designation',
'adresse1' => 'Adresse1',
'adresse2' => 'Adresse2',
'adresse3' => 'Adresse3',
'cP' => 'CP',
'commune' => 'Commune',
'insee' => 'Insee',
'pays' => 'Pays',
'telephone' => 'Telephone',
'fax' => 'Fax',
'email' => 'Email',
'aPE' => 'APE',
'tVAPays' => 'TVAPays',
'tVAClef' => 'TVAClef',
'sIREN' => 'SIREN',
'nIC' => 'NIC',
'referenceAnalytique' => 'ReferenceAnalytique',
'agence' => 'Agence',
'codeMission' => 'CodeMission',
'debut' => 'Debut',
'finPrevue' => 'FinPrevue',
'finReelle' => 'FinReelle',
'dateCreation' => 'DateCreation',
'categorieSalariale' => 'CategorieSalariale',
'motifEmbauche' => 'MotifEmbauche',
'justification' => 'justification',
'missionARisqueL23131' => 'MissionARisqueL23131',
'finDeMission' => 'FinDeMission',
'heureDePresentation' => 'HeureDePresentation',
'typeContrat' => 'TypeContrat',
'dateEffet' => 'DateEffet',
'dateFinAvenant' => 'DateFinAvenant',
'souplesseDebut' => 'SouplesseDebut',
'souplesseFin' => 'SouplesseFin',
'horairesParticulier' => 'HorairesParticulier',
'retourSignatureerimaire' => 'RetourSignatureerimaire',
'retourSignatureClient' => 'RetourSignatureClient',
'tauxPaye' => 'TauxPaye',
'tauxFacture' => 'TauxFacture',
'lotFacture' => 'LotFacture',
'dureeHebdo' => 'DureeHebdo',
'horaireCollectifMoyen' => 'HoraireCollectifMoyen',
'idMetier' => 'IdMetier',
'metier' => 'Metier',
'poste' => 'Poste',
'seuilEtDecompte' => 'SeuilEtDecompte',
'salaireReference1' => 'SalaireReference1',
'salaireReference2' => 'SalaireReference2',
'salaireReference3' => 'SalaireReference3',
'salaireReference4' => 'SalaireReference4',
'salaireReference5' => 'SalaireReference5',
'salaireReference6' => 'SalaireReference6',
'salaireReference7' => 'SalaireReference7',
'salaireReference8' => 'SalaireReference8',
'salaireReference9' => 'SalaireReference9',
'salaireReference10' => 'SalaireReference10',
'description1' => 'Description1',
'description2' => 'Description2',
'description3' => 'Description3',
'protection1' => 'Protection1',
'protection2' => 'Protection2',
'protection3' => 'Protection3',
'risque1' => 'Risque1',
'risque2' => 'Risque2',
'risque3' => 'Risque3',
'moyenAcces' => 'MoyenAcces',
'periodeFermeture' => 'PeriodeFermeture',
'codePCS' => 'CodePCS'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'idContrat' => 'setIdContrat',
'idPersonne' => 'setIdPersonne',
'idClient' => 'setIdClient',
'ordreClient' => 'setOrdreClient',
'designation' => 'setDesignation',
'adresse1' => 'setAdresse1',
'adresse2' => 'setAdresse2',
'adresse3' => 'setAdresse3',
'cP' => 'setCP',
'commune' => 'setCommune',
'insee' => 'setInsee',
'pays' => 'setPays',
'telephone' => 'setTelephone',
'fax' => 'setFax',
'email' => 'setEmail',
'aPE' => 'setAPE',
'tVAPays' => 'setTVAPays',
'tVAClef' => 'setTVAClef',
'sIREN' => 'setSIREN',
'nIC' => 'setNIC',
'referenceAnalytique' => 'setReferenceAnalytique',
'agence' => 'setAgence',
'codeMission' => 'setCodeMission',
'debut' => 'setDebut',
'finPrevue' => 'setFinPrevue',
'finReelle' => 'setFinReelle',
'dateCreation' => 'setDateCreation',
'categorieSalariale' => 'setCategorieSalariale',
'motifEmbauche' => 'setMotifEmbauche',
'justification' => 'setJustification',
'missionARisqueL23131' => 'setMissionARisqueL23131',
'finDeMission' => 'setFinDeMission',
'heureDePresentation' => 'setHeureDePresentation',
'typeContrat' => 'setTypeContrat',
'dateEffet' => 'setDateEffet',
'dateFinAvenant' => 'setDateFinAvenant',
'souplesseDebut' => 'setSouplesseDebut',
'souplesseFin' => 'setSouplesseFin',
'horairesParticulier' => 'setHorairesParticulier',
'retourSignatureerimaire' => 'setRetourSignatureerimaire',
'retourSignatureClient' => 'setRetourSignatureClient',
'tauxPaye' => 'setTauxPaye',
'tauxFacture' => 'setTauxFacture',
'lotFacture' => 'setLotFacture',
'dureeHebdo' => 'setDureeHebdo',
'horaireCollectifMoyen' => 'setHoraireCollectifMoyen',
'idMetier' => 'setIdMetier',
'metier' => 'setMetier',
'poste' => 'setPoste',
'seuilEtDecompte' => 'setSeuilEtDecompte',
'salaireReference1' => 'setSalaireReference1',
'salaireReference2' => 'setSalaireReference2',
'salaireReference3' => 'setSalaireReference3',
'salaireReference4' => 'setSalaireReference4',
'salaireReference5' => 'setSalaireReference5',
'salaireReference6' => 'setSalaireReference6',
'salaireReference7' => 'setSalaireReference7',
'salaireReference8' => 'setSalaireReference8',
'salaireReference9' => 'setSalaireReference9',
'salaireReference10' => 'setSalaireReference10',
'description1' => 'setDescription1',
'description2' => 'setDescription2',
'description3' => 'setDescription3',
'protection1' => 'setProtection1',
'protection2' => 'setProtection2',
'protection3' => 'setProtection3',
'risque1' => 'setRisque1',
'risque2' => 'setRisque2',
'risque3' => 'setRisque3',
'moyenAcces' => 'setMoyenAcces',
'periodeFermeture' => 'setPeriodeFermeture',
'codePCS' => 'setCodePCS'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'idContrat' => 'getIdContrat',
'idPersonne' => 'getIdPersonne',
'idClient' => 'getIdClient',
'ordreClient' => 'getOrdreClient',
'designation' => 'getDesignation',
'adresse1' => 'getAdresse1',
'adresse2' => 'getAdresse2',
'adresse3' => 'getAdresse3',
'cP' => 'getCP',
'commune' => 'getCommune',
'insee' => 'getInsee',
'pays' => 'getPays',
'telephone' => 'getTelephone',
'fax' => 'getFax',
'email' => 'getEmail',
'aPE' => 'getAPE',
'tVAPays' => 'getTVAPays',
'tVAClef' => 'getTVAClef',
'sIREN' => 'getSIREN',
'nIC' => 'getNIC',
'referenceAnalytique' => 'getReferenceAnalytique',
'agence' => 'getAgence',
'codeMission' => 'getCodeMission',
'debut' => 'getDebut',
'finPrevue' => 'getFinPrevue',
'finReelle' => 'getFinReelle',
'dateCreation' => 'getDateCreation',
'categorieSalariale' => 'getCategorieSalariale',
'motifEmbauche' => 'getMotifEmbauche',
'justification' => 'getJustification',
'missionARisqueL23131' => 'getMissionARisqueL23131',
'finDeMission' => 'getFinDeMission',
'heureDePresentation' => 'getHeureDePresentation',
'typeContrat' => 'getTypeContrat',
'dateEffet' => 'getDateEffet',
'dateFinAvenant' => 'getDateFinAvenant',
'souplesseDebut' => 'getSouplesseDebut',
'souplesseFin' => 'getSouplesseFin',
'horairesParticulier' => 'getHorairesParticulier',
'retourSignatureerimaire' => 'getRetourSignatureerimaire',
'retourSignatureClient' => 'getRetourSignatureClient',
'tauxPaye' => 'getTauxPaye',
'tauxFacture' => 'getTauxFacture',
'lotFacture' => 'getLotFacture',
'dureeHebdo' => 'getDureeHebdo',
'horaireCollectifMoyen' => 'getHoraireCollectifMoyen',
'idMetier' => 'getIdMetier',
'metier' => 'getMetier',
'poste' => 'getPoste',
'seuilEtDecompte' => 'getSeuilEtDecompte',
'salaireReference1' => 'getSalaireReference1',
'salaireReference2' => 'getSalaireReference2',
'salaireReference3' => 'getSalaireReference3',
'salaireReference4' => 'getSalaireReference4',
'salaireReference5' => 'getSalaireReference5',
'salaireReference6' => 'getSalaireReference6',
'salaireReference7' => 'getSalaireReference7',
'salaireReference8' => 'getSalaireReference8',
'salaireReference9' => 'getSalaireReference9',
'salaireReference10' => 'getSalaireReference10',
'description1' => 'getDescription1',
'description2' => 'getDescription2',
'description3' => 'getDescription3',
'protection1' => 'getProtection1',
'protection2' => 'getProtection2',
'protection3' => 'getProtection3',
'risque1' => 'getRisque1',
'risque2' => 'getRisque2',
'risque3' => 'getRisque3',
'moyenAcces' => 'getMoyenAcces',
'periodeFermeture' => 'getPeriodeFermeture',
'codePCS' => 'getCodePCS'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const TYPE_CONTRAT_INITIAL = 'Initial';
const TYPE_CONTRAT_PROLONGATION = 'Prolongation';
const TYPE_CONTRAT_MODIFICATION = 'Modification';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTypeContratAllowableValues()
    {
        return [
            self::TYPE_CONTRAT_INITIAL,
self::TYPE_CONTRAT_PROLONGATION,
self::TYPE_CONTRAT_MODIFICATION,        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['idContrat'] = isset($data['idContrat']) ? $data['idContrat'] : null;
        $this->container['idPersonne'] = isset($data['idPersonne']) ? $data['idPersonne'] : null;
        $this->container['idClient'] = isset($data['idClient']) ? $data['idClient'] : null;
        $this->container['ordreClient'] = isset($data['ordreClient']) ? $data['ordreClient'] : null;
        $this->container['designation'] = isset($data['designation']) ? $data['designation'] : null;
        $this->container['adresse1'] = isset($data['adresse1']) ? $data['adresse1'] : null;
        $this->container['adresse2'] = isset($data['adresse2']) ? $data['adresse2'] : null;
        $this->container['adresse3'] = isset($data['adresse3']) ? $data['adresse3'] : null;
        $this->container['cP'] = isset($data['cP']) ? $data['cP'] : null;
        $this->container['commune'] = isset($data['commune']) ? $data['commune'] : null;
        $this->container['insee'] = isset($data['insee']) ? $data['insee'] : null;
        $this->container['pays'] = isset($data['pays']) ? $data['pays'] : null;
        $this->container['telephone'] = isset($data['telephone']) ? $data['telephone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['aPE'] = isset($data['aPE']) ? $data['aPE'] : null;
        $this->container['tVAPays'] = isset($data['tVAPays']) ? $data['tVAPays'] : null;
        $this->container['tVAClef'] = isset($data['tVAClef']) ? $data['tVAClef'] : null;
        $this->container['sIREN'] = isset($data['sIREN']) ? $data['sIREN'] : null;
        $this->container['nIC'] = isset($data['nIC']) ? $data['nIC'] : null;
        $this->container['referenceAnalytique'] = isset($data['referenceAnalytique']) ? $data['referenceAnalytique'] : null;
        $this->container['agence'] = isset($data['agence']) ? $data['agence'] : null;
        $this->container['codeMission'] = isset($data['codeMission']) ? $data['codeMission'] : null;
        $this->container['debut'] = isset($data['debut']) ? $data['debut'] : null;
        $this->container['finPrevue'] = isset($data['finPrevue']) ? $data['finPrevue'] : null;
        $this->container['finReelle'] = isset($data['finReelle']) ? $data['finReelle'] : null;
        $this->container['dateCreation'] = isset($data['dateCreation']) ? $data['dateCreation'] : null;
        $this->container['categorieSalariale'] = isset($data['categorieSalariale']) ? $data['categorieSalariale'] : null;
        $this->container['motifEmbauche'] = isset($data['motifEmbauche']) ? $data['motifEmbauche'] : null;
        $this->container['justification'] = isset($data['justification']) ? $data['justification'] : null;
        $this->container['missionARisqueL23131'] = isset($data['missionARisqueL23131']) ? $data['missionARisqueL23131'] : null;
        $this->container['finDeMission'] = isset($data['finDeMission']) ? $data['finDeMission'] : null;
        $this->container['heureDePresentation'] = isset($data['heureDePresentation']) ? $data['heureDePresentation'] : null;
        $this->container['typeContrat'] = isset($data['typeContrat']) ? $data['typeContrat'] : null;
        $this->container['dateEffet'] = isset($data['dateEffet']) ? $data['dateEffet'] : null;
        $this->container['dateFinAvenant'] = isset($data['dateFinAvenant']) ? $data['dateFinAvenant'] : null;
        $this->container['souplesseDebut'] = isset($data['souplesseDebut']) ? $data['souplesseDebut'] : null;
        $this->container['souplesseFin'] = isset($data['souplesseFin']) ? $data['souplesseFin'] : null;
        $this->container['horairesParticulier'] = isset($data['horairesParticulier']) ? $data['horairesParticulier'] : null;
        $this->container['retourSignatureerimaire'] = isset($data['retourSignatureerimaire']) ? $data['retourSignatureerimaire'] : null;
        $this->container['retourSignatureClient'] = isset($data['retourSignatureClient']) ? $data['retourSignatureClient'] : null;
        $this->container['tauxPaye'] = isset($data['tauxPaye']) ? $data['tauxPaye'] : null;
        $this->container['tauxFacture'] = isset($data['tauxFacture']) ? $data['tauxFacture'] : null;
        $this->container['lotFacture'] = isset($data['lotFacture']) ? $data['lotFacture'] : null;
        $this->container['dureeHebdo'] = isset($data['dureeHebdo']) ? $data['dureeHebdo'] : null;
        $this->container['horaireCollectifMoyen'] = isset($data['horaireCollectifMoyen']) ? $data['horaireCollectifMoyen'] : null;
        $this->container['idMetier'] = isset($data['idMetier']) ? $data['idMetier'] : null;
        $this->container['metier'] = isset($data['metier']) ? $data['metier'] : null;
        $this->container['poste'] = isset($data['poste']) ? $data['poste'] : null;
        $this->container['seuilEtDecompte'] = isset($data['seuilEtDecompte']) ? $data['seuilEtDecompte'] : null;
        $this->container['salaireReference1'] = isset($data['salaireReference1']) ? $data['salaireReference1'] : null;
        $this->container['salaireReference2'] = isset($data['salaireReference2']) ? $data['salaireReference2'] : null;
        $this->container['salaireReference3'] = isset($data['salaireReference3']) ? $data['salaireReference3'] : null;
        $this->container['salaireReference4'] = isset($data['salaireReference4']) ? $data['salaireReference4'] : null;
        $this->container['salaireReference5'] = isset($data['salaireReference5']) ? $data['salaireReference5'] : null;
        $this->container['salaireReference6'] = isset($data['salaireReference6']) ? $data['salaireReference6'] : null;
        $this->container['salaireReference7'] = isset($data['salaireReference7']) ? $data['salaireReference7'] : null;
        $this->container['salaireReference8'] = isset($data['salaireReference8']) ? $data['salaireReference8'] : null;
        $this->container['salaireReference9'] = isset($data['salaireReference9']) ? $data['salaireReference9'] : null;
        $this->container['salaireReference10'] = isset($data['salaireReference10']) ? $data['salaireReference10'] : null;
        $this->container['description1'] = isset($data['description1']) ? $data['description1'] : null;
        $this->container['description2'] = isset($data['description2']) ? $data['description2'] : null;
        $this->container['description3'] = isset($data['description3']) ? $data['description3'] : null;
        $this->container['protection1'] = isset($data['protection1']) ? $data['protection1'] : null;
        $this->container['protection2'] = isset($data['protection2']) ? $data['protection2'] : null;
        $this->container['protection3'] = isset($data['protection3']) ? $data['protection3'] : null;
        $this->container['risque1'] = isset($data['risque1']) ? $data['risque1'] : null;
        $this->container['risque2'] = isset($data['risque2']) ? $data['risque2'] : null;
        $this->container['risque3'] = isset($data['risque3']) ? $data['risque3'] : null;
        $this->container['moyenAcces'] = isset($data['moyenAcces']) ? $data['moyenAcces'] : null;
        $this->container['periodeFermeture'] = isset($data['periodeFermeture']) ? $data['periodeFermeture'] : null;
        $this->container['codePCS'] = isset($data['codePCS']) ? $data['codePCS'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['idContrat'] === null) {
            $invalidProperties[] = "'idContrat' can't be null";
        }
        if ($this->container['idPersonne'] === null) {
            $invalidProperties[] = "'idPersonne' can't be null";
        }
        if ($this->container['idClient'] === null) {
            $invalidProperties[] = "'idClient' can't be null";
        }
        if ($this->container['ordreClient'] === null) {
            $invalidProperties[] = "'ordreClient' can't be null";
        }
        if ($this->container['designation'] === null) {
            $invalidProperties[] = "'designation' can't be null";
        }
        if ($this->container['adresse1'] === null) {
            $invalidProperties[] = "'adresse1' can't be null";
        }
        if ($this->container['adresse2'] === null) {
            $invalidProperties[] = "'adresse2' can't be null";
        }
        if ($this->container['adresse3'] === null) {
            $invalidProperties[] = "'adresse3' can't be null";
        }
        if ($this->container['cP'] === null) {
            $invalidProperties[] = "'cP' can't be null";
        }
        if ($this->container['commune'] === null) {
            $invalidProperties[] = "'commune' can't be null";
        }
        if ($this->container['insee'] === null) {
            $invalidProperties[] = "'insee' can't be null";
        }
        if ($this->container['pays'] === null) {
            $invalidProperties[] = "'pays' can't be null";
        }
        if ($this->container['telephone'] === null) {
            $invalidProperties[] = "'telephone' can't be null";
        }
        if ($this->container['fax'] === null) {
            $invalidProperties[] = "'fax' can't be null";
        }
        if ($this->container['email'] === null) {
            $invalidProperties[] = "'email' can't be null";
        }
        if ($this->container['aPE'] === null) {
            $invalidProperties[] = "'aPE' can't be null";
        }
        if ($this->container['tVAPays'] === null) {
            $invalidProperties[] = "'tVAPays' can't be null";
        }
        if ($this->container['tVAClef'] === null) {
            $invalidProperties[] = "'tVAClef' can't be null";
        }
        if ($this->container['sIREN'] === null) {
            $invalidProperties[] = "'sIREN' can't be null";
        }
        if ($this->container['nIC'] === null) {
            $invalidProperties[] = "'nIC' can't be null";
        }
        if ($this->container['referenceAnalytique'] === null) {
            $invalidProperties[] = "'referenceAnalytique' can't be null";
        }
        if ($this->container['agence'] === null) {
            $invalidProperties[] = "'agence' can't be null";
        }
        if ($this->container['codeMission'] === null) {
            $invalidProperties[] = "'codeMission' can't be null";
        }
        if ($this->container['debut'] === null) {
            $invalidProperties[] = "'debut' can't be null";
        }
        if ($this->container['finPrevue'] === null) {
            $invalidProperties[] = "'finPrevue' can't be null";
        }
        if ($this->container['finReelle'] === null) {
            $invalidProperties[] = "'finReelle' can't be null";
        }
        if ($this->container['dateCreation'] === null) {
            $invalidProperties[] = "'dateCreation' can't be null";
        }
        if ($this->container['categorieSalariale'] === null) {
            $invalidProperties[] = "'categorieSalariale' can't be null";
        }
        if ($this->container['motifEmbauche'] === null) {
            $invalidProperties[] = "'motifEmbauche' can't be null";
        }
        if ($this->container['justification'] === null) {
            $invalidProperties[] = "'justification' can't be null";
        }
        if ($this->container['missionARisqueL23131'] === null) {
            $invalidProperties[] = "'missionARisqueL23131' can't be null";
        }
        if ($this->container['finDeMission'] === null) {
            $invalidProperties[] = "'finDeMission' can't be null";
        }
        if ($this->container['heureDePresentation'] === null) {
            $invalidProperties[] = "'heureDePresentation' can't be null";
        }
        if ($this->container['typeContrat'] === null) {
            $invalidProperties[] = "'typeContrat' can't be null";
        }
        $allowedValues = $this->getTypeContratAllowableValues();
        if (!is_null($this->container['typeContrat']) && !in_array($this->container['typeContrat'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'typeContrat', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['dateEffet'] === null) {
            $invalidProperties[] = "'dateEffet' can't be null";
        }
        if ($this->container['dateFinAvenant'] === null) {
            $invalidProperties[] = "'dateFinAvenant' can't be null";
        }
        if ($this->container['souplesseDebut'] === null) {
            $invalidProperties[] = "'souplesseDebut' can't be null";
        }
        if ($this->container['souplesseFin'] === null) {
            $invalidProperties[] = "'souplesseFin' can't be null";
        }
        if ($this->container['horairesParticulier'] === null) {
            $invalidProperties[] = "'horairesParticulier' can't be null";
        }
        if ($this->container['retourSignatureerimaire'] === null) {
            $invalidProperties[] = "'retourSignatureerimaire' can't be null";
        }
        if ($this->container['retourSignatureClient'] === null) {
            $invalidProperties[] = "'retourSignatureClient' can't be null";
        }
        if ($this->container['tauxPaye'] === null) {
            $invalidProperties[] = "'tauxPaye' can't be null";
        }
        if ($this->container['tauxFacture'] === null) {
            $invalidProperties[] = "'tauxFacture' can't be null";
        }
        if ($this->container['lotFacture'] === null) {
            $invalidProperties[] = "'lotFacture' can't be null";
        }
        if ($this->container['dureeHebdo'] === null) {
            $invalidProperties[] = "'dureeHebdo' can't be null";
        }
        if ($this->container['horaireCollectifMoyen'] === null) {
            $invalidProperties[] = "'horaireCollectifMoyen' can't be null";
        }
        if ($this->container['idMetier'] === null) {
            $invalidProperties[] = "'idMetier' can't be null";
        }
        if ($this->container['metier'] === null) {
            $invalidProperties[] = "'metier' can't be null";
        }
        if ($this->container['poste'] === null) {
            $invalidProperties[] = "'poste' can't be null";
        }
        if ($this->container['seuilEtDecompte'] === null) {
            $invalidProperties[] = "'seuilEtDecompte' can't be null";
        }
        if ($this->container['salaireReference1'] === null) {
            $invalidProperties[] = "'salaireReference1' can't be null";
        }
        if ($this->container['salaireReference2'] === null) {
            $invalidProperties[] = "'salaireReference2' can't be null";
        }
        if ($this->container['salaireReference3'] === null) {
            $invalidProperties[] = "'salaireReference3' can't be null";
        }
        if ($this->container['salaireReference4'] === null) {
            $invalidProperties[] = "'salaireReference4' can't be null";
        }
        if ($this->container['salaireReference5'] === null) {
            $invalidProperties[] = "'salaireReference5' can't be null";
        }
        if ($this->container['salaireReference6'] === null) {
            $invalidProperties[] = "'salaireReference6' can't be null";
        }
        if ($this->container['salaireReference7'] === null) {
            $invalidProperties[] = "'salaireReference7' can't be null";
        }
        if ($this->container['salaireReference8'] === null) {
            $invalidProperties[] = "'salaireReference8' can't be null";
        }
        if ($this->container['salaireReference9'] === null) {
            $invalidProperties[] = "'salaireReference9' can't be null";
        }
        if ($this->container['salaireReference10'] === null) {
            $invalidProperties[] = "'salaireReference10' can't be null";
        }
        if ($this->container['description1'] === null) {
            $invalidProperties[] = "'description1' can't be null";
        }
        if ($this->container['description2'] === null) {
            $invalidProperties[] = "'description2' can't be null";
        }
        if ($this->container['description3'] === null) {
            $invalidProperties[] = "'description3' can't be null";
        }
        if ($this->container['protection1'] === null) {
            $invalidProperties[] = "'protection1' can't be null";
        }
        if ($this->container['protection2'] === null) {
            $invalidProperties[] = "'protection2' can't be null";
        }
        if ($this->container['protection3'] === null) {
            $invalidProperties[] = "'protection3' can't be null";
        }
        if ($this->container['risque1'] === null) {
            $invalidProperties[] = "'risque1' can't be null";
        }
        if ($this->container['risque2'] === null) {
            $invalidProperties[] = "'risque2' can't be null";
        }
        if ($this->container['risque3'] === null) {
            $invalidProperties[] = "'risque3' can't be null";
        }
        if ($this->container['moyenAcces'] === null) {
            $invalidProperties[] = "'moyenAcces' can't be null";
        }
        if ($this->container['periodeFermeture'] === null) {
            $invalidProperties[] = "'periodeFermeture' can't be null";
        }
        if ($this->container['codePCS'] === null) {
            $invalidProperties[] = "'codePCS' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets idContrat
     *
     * @return int
     */
    public function getIdContrat()
    {
        return $this->container['idContrat'];
    }

    /**
     * Sets idContrat
     *
     * @param int $idContrat idContrat
     *
     * @return $this
     */
    public function setIdContrat($idContrat)
    {
        $this->container['idContrat'] = $idContrat;

        return $this;
    }

    /**
     * Gets idPersonne
     *
     * @return int
     */
    public function getIdPersonne()
    {
        return $this->container['idPersonne'];
    }

    /**
     * Sets idPersonne
     *
     * @param int $idPersonne idPersonne
     *
     * @return $this
     */
    public function setIdPersonne($idPersonne)
    {
        $this->container['idPersonne'] = $idPersonne;

        return $this;
    }

    /**
     * Gets idClient
     *
     * @return int
     */
    public function getIdClient()
    {
        return $this->container['idClient'];
    }

    /**
     * Sets idClient
     *
     * @param int $idClient idClient
     *
     * @return $this
     */
    public function setIdClient($idClient)
    {
        $this->container['idClient'] = $idClient;

        return $this;
    }

    /**
     * Gets ordreClient
     *
     * @return int
     */
    public function getOrdreClient()
    {
        return $this->container['ordreClient'];
    }

    /**
     * Sets ordreClient
     *
     * @param int $ordreClient ordreClient
     *
     * @return $this
     */
    public function setOrdreClient($ordreClient)
    {
        $this->container['ordreClient'] = $ordreClient;

        return $this;
    }

    /**
     * Gets designation
     *
     * @return string
     */
    public function getDesignation()
    {
        return $this->container['designation'];
    }

    /**
     * Sets designation
     *
     * @param string $designation designation
     *
     * @return $this
     */
    public function setDesignation($designation)
    {
        $this->container['designation'] = $designation;

        return $this;
    }

    /**
     * Gets adresse1
     *
     * @return string
     */
    public function getAdresse1()
    {
        return $this->container['adresse1'];
    }

    /**
     * Sets adresse1
     *
     * @param string $adresse1 adresse1
     *
     * @return $this
     */
    public function setAdresse1($adresse1)
    {
        $this->container['adresse1'] = $adresse1;

        return $this;
    }

    /**
     * Gets adresse2
     *
     * @return string
     */
    public function getAdresse2()
    {
        return $this->container['adresse2'];
    }

    /**
     * Sets adresse2
     *
     * @param string $adresse2 adresse2
     *
     * @return $this
     */
    public function setAdresse2($adresse2)
    {
        $this->container['adresse2'] = $adresse2;

        return $this;
    }

    /**
     * Gets adresse3
     *
     * @return string
     */
    public function getAdresse3()
    {
        return $this->container['adresse3'];
    }

    /**
     * Sets adresse3
     *
     * @param string $adresse3 adresse3
     *
     * @return $this
     */
    public function setAdresse3($adresse3)
    {
        $this->container['adresse3'] = $adresse3;

        return $this;
    }

    /**
     * Gets cP
     *
     * @return string
     */
    public function getCP()
    {
        return $this->container['cP'];
    }

    /**
     * Sets cP
     *
     * @param string $cP cP
     *
     * @return $this
     */
    public function setCP($cP)
    {
        $this->container['cP'] = $cP;

        return $this;
    }

    /**
     * Gets commune
     *
     * @return string
     */
    public function getCommune()
    {
        return $this->container['commune'];
    }

    /**
     * Sets commune
     *
     * @param string $commune commune
     *
     * @return $this
     */
    public function setCommune($commune)
    {
        $this->container['commune'] = $commune;

        return $this;
    }

    /**
     * Gets insee
     *
     * @return string
     */
    public function getInsee()
    {
        return $this->container['insee'];
    }

    /**
     * Sets insee
     *
     * @param string $insee insee
     *
     * @return $this
     */
    public function setInsee($insee)
    {
        $this->container['insee'] = $insee;

        return $this;
    }

    /**
     * Gets pays
     *
     * @return string
     */
    public function getPays()
    {
        return $this->container['pays'];
    }

    /**
     * Sets pays
     *
     * @param string $pays pays
     *
     * @return $this
     */
    public function setPays($pays)
    {
        $this->container['pays'] = $pays;

        return $this;
    }

    /**
     * Gets telephone
     *
     * @return string
     */
    public function getTelephone()
    {
        return $this->container['telephone'];
    }

    /**
     * Sets telephone
     *
     * @param string $telephone telephone
     *
     * @return $this
     */
    public function setTelephone($telephone)
    {
        $this->container['telephone'] = $telephone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets aPE
     *
     * @return string
     */
    public function getAPE()
    {
        return $this->container['aPE'];
    }

    /**
     * Sets aPE
     *
     * @param string $aPE aPE
     *
     * @return $this
     */
    public function setAPE($aPE)
    {
        $this->container['aPE'] = $aPE;

        return $this;
    }

    /**
     * Gets tVAPays
     *
     * @return string
     */
    public function getTVAPays()
    {
        return $this->container['tVAPays'];
    }

    /**
     * Sets tVAPays
     *
     * @param string $tVAPays tVAPays
     *
     * @return $this
     */
    public function setTVAPays($tVAPays)
    {
        $this->container['tVAPays'] = $tVAPays;

        return $this;
    }

    /**
     * Gets tVAClef
     *
     * @return string
     */
    public function getTVAClef()
    {
        return $this->container['tVAClef'];
    }

    /**
     * Sets tVAClef
     *
     * @param string $tVAClef tVAClef
     *
     * @return $this
     */
    public function setTVAClef($tVAClef)
    {
        $this->container['tVAClef'] = $tVAClef;

        return $this;
    }

    /**
     * Gets sIREN
     *
     * @return string
     */
    public function getSIREN()
    {
        return $this->container['sIREN'];
    }

    /**
     * Sets sIREN
     *
     * @param string $sIREN sIREN
     *
     * @return $this
     */
    public function setSIREN($sIREN)
    {
        $this->container['sIREN'] = $sIREN;

        return $this;
    }

    /**
     * Gets nIC
     *
     * @return string
     */
    public function getNIC()
    {
        return $this->container['nIC'];
    }

    /**
     * Sets nIC
     *
     * @param string $nIC nIC
     *
     * @return $this
     */
    public function setNIC($nIC)
    {
        $this->container['nIC'] = $nIC;

        return $this;
    }

    /**
     * Gets referenceAnalytique
     *
     * @return string
     */
    public function getReferenceAnalytique()
    {
        return $this->container['referenceAnalytique'];
    }

    /**
     * Sets referenceAnalytique
     *
     * @param string $referenceAnalytique referenceAnalytique
     *
     * @return $this
     */
    public function setReferenceAnalytique($referenceAnalytique)
    {
        $this->container['referenceAnalytique'] = $referenceAnalytique;

        return $this;
    }

    /**
     * Gets agence
     *
     * @return string
     */
    public function getAgence()
    {
        return $this->container['agence'];
    }

    /**
     * Sets agence
     *
     * @param string $agence agence
     *
     * @return $this
     */
    public function setAgence($agence)
    {
        $this->container['agence'] = $agence;

        return $this;
    }

    /**
     * Gets codeMission
     *
     * @return string
     */
    public function getCodeMission()
    {
        return $this->container['codeMission'];
    }

    /**
     * Sets codeMission
     *
     * @param string $codeMission codeMission
     *
     * @return $this
     */
    public function setCodeMission($codeMission)
    {
        $this->container['codeMission'] = $codeMission;

        return $this;
    }

    /**
     * Gets debut
     *
     * @return string
     */
    public function getDebut()
    {
        return $this->container['debut'];
    }

    /**
     * Sets debut
     *
     * @param string $debut debut
     *
     * @return $this
     */
    public function setDebut($debut)
    {
        $this->container['debut'] = $debut;

        return $this;
    }

    /**
     * Gets finPrevue
     *
     * @return string
     */
    public function getFinPrevue()
    {
        return $this->container['finPrevue'];
    }

    /**
     * Sets finPrevue
     *
     * @param string $finPrevue finPrevue
     *
     * @return $this
     */
    public function setFinPrevue($finPrevue)
    {
        $this->container['finPrevue'] = $finPrevue;

        return $this;
    }

    /**
     * Gets finReelle
     *
     * @return string
     */
    public function getFinReelle()
    {
        return $this->container['finReelle'];
    }

    /**
     * Sets finReelle
     *
     * @param string $finReelle finReelle
     *
     * @return $this
     */
    public function setFinReelle($finReelle)
    {
        $this->container['finReelle'] = $finReelle;

        return $this;
    }

    /**
     * Gets dateCreation
     *
     * @return string
     */
    public function getDateCreation()
    {
        return $this->container['dateCreation'];
    }

    /**
     * Sets dateCreation
     *
     * @param string $dateCreation DateTime format 01/01/1970 00:00:00
     *
     * @return $this
     */
    public function setDateCreation($dateCreation)
    {
        $this->container['dateCreation'] = $dateCreation;

        return $this;
    }

    /**
     * Gets categorieSalariale
     *
     * @return string
     */
    public function getCategorieSalariale()
    {
        return $this->container['categorieSalariale'];
    }

    /**
     * Sets categorieSalariale
     *
     * @param string $categorieSalariale categorieSalariale
     *
     * @return $this
     */
    public function setCategorieSalariale($categorieSalariale)
    {
        $this->container['categorieSalariale'] = $categorieSalariale;

        return $this;
    }

    /**
     * Gets motifEmbauche
     *
     * @return string
     */
    public function getMotifEmbauche()
    {
        return $this->container['motifEmbauche'];
    }

    /**
     * Sets motifEmbauche
     *
     * @param string $motifEmbauche motifEmbauche
     *
     * @return $this
     */
    public function setMotifEmbauche($motifEmbauche)
    {
        $this->container['motifEmbauche'] = $motifEmbauche;

        return $this;
    }

    /**
     * Gets justification
     *
     * @return string
     */
    public function getJustification()
    {
        return $this->container['justification'];
    }

    /**
     * Sets justification
     *
     * @param string $justification justification
     *
     * @return $this
     */
    public function setJustification($justification)
    {
        $this->container['justification'] = $justification;

        return $this;
    }

    /**
     * Gets missionARisqueL23131
     *
     * @return bool
     */
    public function getMissionARisqueL23131()
    {
        return $this->container['missionARisqueL23131'];
    }

    /**
     * Sets missionARisqueL23131
     *
     * @param bool $missionARisqueL23131 missionARisqueL23131
     *
     * @return $this
     */
    public function setMissionARisqueL23131($missionARisqueL23131)
    {
        $this->container['missionARisqueL23131'] = $missionARisqueL23131;

        return $this;
    }

    /**
     * Gets finDeMission
     *
     * @return string
     */
    public function getFinDeMission()
    {
        return $this->container['finDeMission'];
    }

    /**
     * Sets finDeMission
     *
     * @param string $finDeMission finDeMission
     *
     * @return $this
     */
    public function setFinDeMission($finDeMission)
    {
        $this->container['finDeMission'] = $finDeMission;

        return $this;
    }

    /**
     * Gets heureDePresentation
     *
     * @return string
     */
    public function getHeureDePresentation()
    {
        return $this->container['heureDePresentation'];
    }

    /**
     * Sets heureDePresentation
     *
     * @param string $heureDePresentation heureDePresentation
     *
     * @return $this
     */
    public function setHeureDePresentation($heureDePresentation)
    {
        $this->container['heureDePresentation'] = $heureDePresentation;

        return $this;
    }

    /**
     * Gets typeContrat
     *
     * @return string
     */
    public function getTypeContrat()
    {
        return $this->container['typeContrat'];
    }

    /**
     * Sets typeContrat
     *
     * @param string $typeContrat typeContrat
     *
     * @return $this
     */
    public function setTypeContrat($typeContrat)
    {
        $allowedValues = $this->getTypeContratAllowableValues();
        if (!in_array($typeContrat, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'typeContrat', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['typeContrat'] = $typeContrat;

        return $this;
    }

    /**
     * Gets dateEffet
     *
     * @return string
     */
    public function getDateEffet()
    {
        return $this->container['dateEffet'];
    }

    /**
     * Sets dateEffet
     *
     * @param string $dateEffet DateTime format 01/01/1970 00:00:00
     *
     * @return $this
     */
    public function setDateEffet($dateEffet)
    {
        $this->container['dateEffet'] = $dateEffet;

        return $this;
    }

    /**
     * Gets dateFinAvenant
     *
     * @return string
     */
    public function getDateFinAvenant()
    {
        return $this->container['dateFinAvenant'];
    }

    /**
     * Sets dateFinAvenant
     *
     * @param string $dateFinAvenant DateTime format 01/01/1970 00:00:00
     *
     * @return $this
     */
    public function setDateFinAvenant($dateFinAvenant)
    {
        $this->container['dateFinAvenant'] = $dateFinAvenant;

        return $this;
    }

    /**
     * Gets souplesseDebut
     *
     * @return string
     */
    public function getSouplesseDebut()
    {
        return $this->container['souplesseDebut'];
    }

    /**
     * Sets souplesseDebut
     *
     * @param string $souplesseDebut souplesseDebut
     *
     * @return $this
     */
    public function setSouplesseDebut($souplesseDebut)
    {
        $this->container['souplesseDebut'] = $souplesseDebut;

        return $this;
    }

    /**
     * Gets souplesseFin
     *
     * @return string
     */
    public function getSouplesseFin()
    {
        return $this->container['souplesseFin'];
    }

    /**
     * Sets souplesseFin
     *
     * @param string $souplesseFin souplesseFin
     *
     * @return $this
     */
    public function setSouplesseFin($souplesseFin)
    {
        $this->container['souplesseFin'] = $souplesseFin;

        return $this;
    }

    /**
     * Gets horairesParticulier
     *
     * @return string
     */
    public function getHorairesParticulier()
    {
        return $this->container['horairesParticulier'];
    }

    /**
     * Sets horairesParticulier
     *
     * @param string $horairesParticulier horairesParticulier
     *
     * @return $this
     */
    public function setHorairesParticulier($horairesParticulier)
    {
        $this->container['horairesParticulier'] = $horairesParticulier;

        return $this;
    }

    /**
     * Gets retourSignatureerimaire
     *
     * @return bool
     */
    public function getRetourSignatureerimaire()
    {
        return $this->container['retourSignatureerimaire'];
    }

    /**
     * Sets retourSignatureerimaire
     *
     * @param bool $retourSignatureerimaire retourSignatureerimaire
     *
     * @return $this
     */
    public function setRetourSignatureerimaire($retourSignatureerimaire)
    {
        $this->container['retourSignatureerimaire'] = $retourSignatureerimaire;

        return $this;
    }

    /**
     * Gets retourSignatureClient
     *
     * @return bool
     */
    public function getRetourSignatureClient()
    {
        return $this->container['retourSignatureClient'];
    }

    /**
     * Sets retourSignatureClient
     *
     * @param bool $retourSignatureClient retourSignatureClient
     *
     * @return $this
     */
    public function setRetourSignatureClient($retourSignatureClient)
    {
        $this->container['retourSignatureClient'] = $retourSignatureClient;

        return $this;
    }

    /**
     * Gets tauxPaye
     *
     * @return int
     */
    public function getTauxPaye()
    {
        return $this->container['tauxPaye'];
    }

    /**
     * Sets tauxPaye
     *
     * @param int $tauxPaye tauxPaye
     *
     * @return $this
     */
    public function setTauxPaye($tauxPaye)
    {
        $this->container['tauxPaye'] = $tauxPaye;

        return $this;
    }

    /**
     * Gets tauxFacture
     *
     * @return int
     */
    public function getTauxFacture()
    {
        return $this->container['tauxFacture'];
    }

    /**
     * Sets tauxFacture
     *
     * @param int $tauxFacture tauxFacture
     *
     * @return $this
     */
    public function setTauxFacture($tauxFacture)
    {
        $this->container['tauxFacture'] = $tauxFacture;

        return $this;
    }

    /**
     * Gets lotFacture
     *
     * @return string
     */
    public function getLotFacture()
    {
        return $this->container['lotFacture'];
    }

    /**
     * Sets lotFacture
     *
     * @param string $lotFacture lotFacture
     *
     * @return $this
     */
    public function setLotFacture($lotFacture)
    {
        $this->container['lotFacture'] = $lotFacture;

        return $this;
    }

    /**
     * Gets dureeHebdo
     *
     * @return string
     */
    public function getDureeHebdo()
    {
        return $this->container['dureeHebdo'];
    }

    /**
     * Sets dureeHebdo
     *
     * @param string $dureeHebdo dureeHebdo
     *
     * @return $this
     */
    public function setDureeHebdo($dureeHebdo)
    {
        $this->container['dureeHebdo'] = $dureeHebdo;

        return $this;
    }

    /**
     * Gets horaireCollectifMoyen
     *
     * @return string
     */
    public function getHoraireCollectifMoyen()
    {
        return $this->container['horaireCollectifMoyen'];
    }

    /**
     * Sets horaireCollectifMoyen
     *
     * @param string $horaireCollectifMoyen horaireCollectifMoyen
     *
     * @return $this
     */
    public function setHoraireCollectifMoyen($horaireCollectifMoyen)
    {
        $this->container['horaireCollectifMoyen'] = $horaireCollectifMoyen;

        return $this;
    }

    /**
     * Gets idMetier
     *
     * @return int
     */
    public function getIdMetier()
    {
        return $this->container['idMetier'];
    }

    /**
     * Sets idMetier
     *
     * @param int $idMetier idMetier
     *
     * @return $this
     */
    public function setIdMetier($idMetier)
    {
        $this->container['idMetier'] = $idMetier;

        return $this;
    }

    /**
     * Gets metier
     *
     * @return string
     */
    public function getMetier()
    {
        return $this->container['metier'];
    }

    /**
     * Sets metier
     *
     * @param string $metier metier
     *
     * @return $this
     */
    public function setMetier($metier)
    {
        $this->container['metier'] = $metier;

        return $this;
    }

    /**
     * Gets poste
     *
     * @return string
     */
    public function getPoste()
    {
        return $this->container['poste'];
    }

    /**
     * Sets poste
     *
     * @param string $poste poste
     *
     * @return $this
     */
    public function setPoste($poste)
    {
        $this->container['poste'] = $poste;

        return $this;
    }

    /**
     * Gets seuilEtDecompte
     *
     * @return string
     */
    public function getSeuilEtDecompte()
    {
        return $this->container['seuilEtDecompte'];
    }

    /**
     * Sets seuilEtDecompte
     *
     * @param string $seuilEtDecompte seuilEtDecompte
     *
     * @return $this
     */
    public function setSeuilEtDecompte($seuilEtDecompte)
    {
        $this->container['seuilEtDecompte'] = $seuilEtDecompte;

        return $this;
    }

    /**
     * Gets salaireReference1
     *
     * @return string
     */
    public function getSalaireReference1()
    {
        return $this->container['salaireReference1'];
    }

    /**
     * Sets salaireReference1
     *
     * @param string $salaireReference1 salaireReference1
     *
     * @return $this
     */
    public function setSalaireReference1($salaireReference1)
    {
        $this->container['salaireReference1'] = $salaireReference1;

        return $this;
    }

    /**
     * Gets salaireReference2
     *
     * @return string
     */
    public function getSalaireReference2()
    {
        return $this->container['salaireReference2'];
    }

    /**
     * Sets salaireReference2
     *
     * @param string $salaireReference2 salaireReference2
     *
     * @return $this
     */
    public function setSalaireReference2($salaireReference2)
    {
        $this->container['salaireReference2'] = $salaireReference2;

        return $this;
    }

    /**
     * Gets salaireReference3
     *
     * @return string
     */
    public function getSalaireReference3()
    {
        return $this->container['salaireReference3'];
    }

    /**
     * Sets salaireReference3
     *
     * @param string $salaireReference3 salaireReference3
     *
     * @return $this
     */
    public function setSalaireReference3($salaireReference3)
    {
        $this->container['salaireReference3'] = $salaireReference3;

        return $this;
    }

    /**
     * Gets salaireReference4
     *
     * @return string
     */
    public function getSalaireReference4()
    {
        return $this->container['salaireReference4'];
    }

    /**
     * Sets salaireReference4
     *
     * @param string $salaireReference4 salaireReference4
     *
     * @return $this
     */
    public function setSalaireReference4($salaireReference4)
    {
        $this->container['salaireReference4'] = $salaireReference4;

        return $this;
    }

    /**
     * Gets salaireReference5
     *
     * @return string
     */
    public function getSalaireReference5()
    {
        return $this->container['salaireReference5'];
    }

    /**
     * Sets salaireReference5
     *
     * @param string $salaireReference5 salaireReference5
     *
     * @return $this
     */
    public function setSalaireReference5($salaireReference5)
    {
        $this->container['salaireReference5'] = $salaireReference5;

        return $this;
    }

    /**
     * Gets salaireReference6
     *
     * @return string
     */
    public function getSalaireReference6()
    {
        return $this->container['salaireReference6'];
    }

    /**
     * Sets salaireReference6
     *
     * @param string $salaireReference6 salaireReference6
     *
     * @return $this
     */
    public function setSalaireReference6($salaireReference6)
    {
        $this->container['salaireReference6'] = $salaireReference6;

        return $this;
    }

    /**
     * Gets salaireReference7
     *
     * @return string
     */
    public function getSalaireReference7()
    {
        return $this->container['salaireReference7'];
    }

    /**
     * Sets salaireReference7
     *
     * @param string $salaireReference7 salaireReference7
     *
     * @return $this
     */
    public function setSalaireReference7($salaireReference7)
    {
        $this->container['salaireReference7'] = $salaireReference7;

        return $this;
    }

    /**
     * Gets salaireReference8
     *
     * @return string
     */
    public function getSalaireReference8()
    {
        return $this->container['salaireReference8'];
    }

    /**
     * Sets salaireReference8
     *
     * @param string $salaireReference8 salaireReference8
     *
     * @return $this
     */
    public function setSalaireReference8($salaireReference8)
    {
        $this->container['salaireReference8'] = $salaireReference8;

        return $this;
    }

    /**
     * Gets salaireReference9
     *
     * @return string
     */
    public function getSalaireReference9()
    {
        return $this->container['salaireReference9'];
    }

    /**
     * Sets salaireReference9
     *
     * @param string $salaireReference9 salaireReference9
     *
     * @return $this
     */
    public function setSalaireReference9($salaireReference9)
    {
        $this->container['salaireReference9'] = $salaireReference9;

        return $this;
    }

    /**
     * Gets salaireReference10
     *
     * @return string
     */
    public function getSalaireReference10()
    {
        return $this->container['salaireReference10'];
    }

    /**
     * Sets salaireReference10
     *
     * @param string $salaireReference10 salaireReference10
     *
     * @return $this
     */
    public function setSalaireReference10($salaireReference10)
    {
        $this->container['salaireReference10'] = $salaireReference10;

        return $this;
    }

    /**
     * Gets description1
     *
     * @return string
     */
    public function getDescription1()
    {
        return $this->container['description1'];
    }

    /**
     * Sets description1
     *
     * @param string $description1 description1
     *
     * @return $this
     */
    public function setDescription1($description1)
    {
        $this->container['description1'] = $description1;

        return $this;
    }

    /**
     * Gets description2
     *
     * @return string
     */
    public function getDescription2()
    {
        return $this->container['description2'];
    }

    /**
     * Sets description2
     *
     * @param string $description2 description2
     *
     * @return $this
     */
    public function setDescription2($description2)
    {
        $this->container['description2'] = $description2;

        return $this;
    }

    /**
     * Gets description3
     *
     * @return string
     */
    public function getDescription3()
    {
        return $this->container['description3'];
    }

    /**
     * Sets description3
     *
     * @param string $description3 description3
     *
     * @return $this
     */
    public function setDescription3($description3)
    {
        $this->container['description3'] = $description3;

        return $this;
    }

    /**
     * Gets protection1
     *
     * @return string
     */
    public function getProtection1()
    {
        return $this->container['protection1'];
    }

    /**
     * Sets protection1
     *
     * @param string $protection1 protection1
     *
     * @return $this
     */
    public function setProtection1($protection1)
    {
        $this->container['protection1'] = $protection1;

        return $this;
    }

    /**
     * Gets protection2
     *
     * @return string
     */
    public function getProtection2()
    {
        return $this->container['protection2'];
    }

    /**
     * Sets protection2
     *
     * @param string $protection2 protection2
     *
     * @return $this
     */
    public function setProtection2($protection2)
    {
        $this->container['protection2'] = $protection2;

        return $this;
    }

    /**
     * Gets protection3
     *
     * @return string
     */
    public function getProtection3()
    {
        return $this->container['protection3'];
    }

    /**
     * Sets protection3
     *
     * @param string $protection3 protection3
     *
     * @return $this
     */
    public function setProtection3($protection3)
    {
        $this->container['protection3'] = $protection3;

        return $this;
    }

    /**
     * Gets risque1
     *
     * @return string
     */
    public function getRisque1()
    {
        return $this->container['risque1'];
    }

    /**
     * Sets risque1
     *
     * @param string $risque1 risque1
     *
     * @return $this
     */
    public function setRisque1($risque1)
    {
        $this->container['risque1'] = $risque1;

        return $this;
    }

    /**
     * Gets risque2
     *
     * @return string
     */
    public function getRisque2()
    {
        return $this->container['risque2'];
    }

    /**
     * Sets risque2
     *
     * @param string $risque2 risque2
     *
     * @return $this
     */
    public function setRisque2($risque2)
    {
        $this->container['risque2'] = $risque2;

        return $this;
    }

    /**
     * Gets risque3
     *
     * @return string
     */
    public function getRisque3()
    {
        return $this->container['risque3'];
    }

    /**
     * Sets risque3
     *
     * @param string $risque3 risque3
     *
     * @return $this
     */
    public function setRisque3($risque3)
    {
        $this->container['risque3'] = $risque3;

        return $this;
    }

    /**
     * Gets moyenAcces
     *
     * @return string
     */
    public function getMoyenAcces()
    {
        return $this->container['moyenAcces'];
    }

    /**
     * Sets moyenAcces
     *
     * @param string $moyenAcces moyenAcces
     *
     * @return $this
     */
    public function setMoyenAcces($moyenAcces)
    {
        $this->container['moyenAcces'] = $moyenAcces;

        return $this;
    }

    /**
     * Gets periodeFermeture
     *
     * @return string
     */
    public function getPeriodeFermeture()
    {
        return $this->container['periodeFermeture'];
    }

    /**
     * Sets periodeFermeture
     *
     * @param string $periodeFermeture periodeFermeture
     *
     * @return $this
     */
    public function setPeriodeFermeture($periodeFermeture)
    {
        $this->container['periodeFermeture'] = $periodeFermeture;

        return $this;
    }

    /**
     * Gets codePCS
     *
     * @return string
     */
    public function getCodePCS()
    {
        return $this->container['codePCS'];
    }

    /**
     * Sets codePCS
     *
     * @param string $codePCS codePCS
     *
     * @return $this
     */
    public function setCodePCS($codePCS)
    {
        $this->container['codePCS'] = $codePCS;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
