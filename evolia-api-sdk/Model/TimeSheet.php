<?php
/**
 * TimeSheet
 *
 * PHP version 5
 *
 * @category Class
 * @package  Evolia
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Evolia
 *
 * Connection of Troops & Evolia
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.23
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Evolia\Model;

use \ArrayAccess;
use \Evolia\ObjectSerializer;

/**
 * TimeSheet Class Doc Comment
 *
 * @category Class
 * @package  Evolia
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TimeSheet implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TimeSheet';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'contrat' => '\Evolia\Model\ContractForTimeSheet',
'annee' => 'int',
'semaine' => 'int',
'datePremierJourSemaine' => '\DateTime',
'lundiJour' => 'float',
'lundiNuit' => 'float',
'mardiJour' => 'float',
'mardiNuit' => 'float',
'mercrediJour' => 'float',
'mercrediNuit' => 'float',
'jeudiJour' => 'float',
'jeudiNuit' => 'float',
'vendrediJour' => 'float',
'vendrediNuit' => 'float',
'samediJour' => 'float',
'samediNuit' => 'float',
'dimancheJour' => 'float',
'dimancheNuit' => 'float',
'finDeMission' => 'string',
'rubriquesVariables' => '\Evolia\Model\RubricValues[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'contrat' => null,
'annee' => 'int32',
'semaine' => 'int32',
'datePremierJourSemaine' => 'date-time',
'lundiJour' => 'float',
'lundiNuit' => 'float',
'mardiJour' => 'float',
'mardiNuit' => 'float',
'mercrediJour' => 'float',
'mercrediNuit' => 'float',
'jeudiJour' => 'float',
'jeudiNuit' => 'float',
'vendrediJour' => 'float',
'vendrediNuit' => 'float',
'samediJour' => 'float',
'samediNuit' => 'float',
'dimancheJour' => 'float',
'dimancheNuit' => 'float',
'finDeMission' => null,
'rubriquesVariables' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'contrat' => 'Contrat',
'annee' => 'Annee',
'semaine' => 'Semaine',
'datePremierJourSemaine' => 'DatePremierJourSemaine',
'lundiJour' => 'LundiJour',
'lundiNuit' => 'LundiNuit',
'mardiJour' => 'MardiJour',
'mardiNuit' => 'MardiNuit',
'mercrediJour' => 'MercrediJour',
'mercrediNuit' => 'MercrediNuit',
'jeudiJour' => 'JeudiJour',
'jeudiNuit' => 'JeudiNuit',
'vendrediJour' => 'VendrediJour',
'vendrediNuit' => 'VendrediNuit',
'samediJour' => 'SamediJour',
'samediNuit' => 'SamediNuit',
'dimancheJour' => 'DimancheJour',
'dimancheNuit' => 'DimancheNuit',
'finDeMission' => 'FinDeMission',
'rubriquesVariables' => 'RubriquesVariables'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'contrat' => 'setContrat',
'annee' => 'setAnnee',
'semaine' => 'setSemaine',
'datePremierJourSemaine' => 'setDatePremierJourSemaine',
'lundiJour' => 'setLundiJour',
'lundiNuit' => 'setLundiNuit',
'mardiJour' => 'setMardiJour',
'mardiNuit' => 'setMardiNuit',
'mercrediJour' => 'setMercrediJour',
'mercrediNuit' => 'setMercrediNuit',
'jeudiJour' => 'setJeudiJour',
'jeudiNuit' => 'setJeudiNuit',
'vendrediJour' => 'setVendrediJour',
'vendrediNuit' => 'setVendrediNuit',
'samediJour' => 'setSamediJour',
'samediNuit' => 'setSamediNuit',
'dimancheJour' => 'setDimancheJour',
'dimancheNuit' => 'setDimancheNuit',
'finDeMission' => 'setFinDeMission',
'rubriquesVariables' => 'setRubriquesVariables'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'contrat' => 'getContrat',
'annee' => 'getAnnee',
'semaine' => 'getSemaine',
'datePremierJourSemaine' => 'getDatePremierJourSemaine',
'lundiJour' => 'getLundiJour',
'lundiNuit' => 'getLundiNuit',
'mardiJour' => 'getMardiJour',
'mardiNuit' => 'getMardiNuit',
'mercrediJour' => 'getMercrediJour',
'mercrediNuit' => 'getMercrediNuit',
'jeudiJour' => 'getJeudiJour',
'jeudiNuit' => 'getJeudiNuit',
'vendrediJour' => 'getVendrediJour',
'vendrediNuit' => 'getVendrediNuit',
'samediJour' => 'getSamediJour',
'samediNuit' => 'getSamediNuit',
'dimancheJour' => 'getDimancheJour',
'dimancheNuit' => 'getDimancheNuit',
'finDeMission' => 'getFinDeMission',
'rubriquesVariables' => 'getRubriquesVariables'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['contrat'] = isset($data['contrat']) ? $data['contrat'] : null;
        $this->container['annee'] = isset($data['annee']) ? $data['annee'] : null;
        $this->container['semaine'] = isset($data['semaine']) ? $data['semaine'] : null;
        $this->container['datePremierJourSemaine'] = isset($data['datePremierJourSemaine']) ? $data['datePremierJourSemaine'] : null;
        $this->container['lundiJour'] = isset($data['lundiJour']) ? $data['lundiJour'] : null;
        $this->container['lundiNuit'] = isset($data['lundiNuit']) ? $data['lundiNuit'] : null;
        $this->container['mardiJour'] = isset($data['mardiJour']) ? $data['mardiJour'] : null;
        $this->container['mardiNuit'] = isset($data['mardiNuit']) ? $data['mardiNuit'] : null;
        $this->container['mercrediJour'] = isset($data['mercrediJour']) ? $data['mercrediJour'] : null;
        $this->container['mercrediNuit'] = isset($data['mercrediNuit']) ? $data['mercrediNuit'] : null;
        $this->container['jeudiJour'] = isset($data['jeudiJour']) ? $data['jeudiJour'] : null;
        $this->container['jeudiNuit'] = isset($data['jeudiNuit']) ? $data['jeudiNuit'] : null;
        $this->container['vendrediJour'] = isset($data['vendrediJour']) ? $data['vendrediJour'] : null;
        $this->container['vendrediNuit'] = isset($data['vendrediNuit']) ? $data['vendrediNuit'] : null;
        $this->container['samediJour'] = isset($data['samediJour']) ? $data['samediJour'] : null;
        $this->container['samediNuit'] = isset($data['samediNuit']) ? $data['samediNuit'] : null;
        $this->container['dimancheJour'] = isset($data['dimancheJour']) ? $data['dimancheJour'] : null;
        $this->container['dimancheNuit'] = isset($data['dimancheNuit']) ? $data['dimancheNuit'] : null;
        $this->container['finDeMission'] = isset($data['finDeMission']) ? $data['finDeMission'] : null;
        $this->container['rubriquesVariables'] = isset($data['rubriquesVariables']) ? $data['rubriquesVariables'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['contrat'] === null) {
            $invalidProperties[] = "'contrat' can't be null";
        }
        if ($this->container['datePremierJourSemaine'] === null) {
            $invalidProperties[] = "'datePremierJourSemaine' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets contrat
     *
     * @return \Evolia\Model\ContractForTimeSheet
     */
    public function getContrat()
    {
        return $this->container['contrat'];
    }

    /**
     * Sets contrat
     *
     * @param \Evolia\Model\ContractForTimeSheet $contrat contrat
     *
     * @return $this
     */
    public function setContrat($contrat)
    {
        $this->container['contrat'] = $contrat;

        return $this;
    }

    /**
     * Gets annee
     *
     * @return int
     */
    public function getAnnee()
    {
        return $this->container['annee'];
    }

    /**
     * Sets annee
     *
     * @param int $annee annee
     *
     * @return $this
     */
    public function setAnnee($annee)
    {
        $this->container['annee'] = $annee;

        return $this;
    }

    /**
     * Gets semaine
     *
     * @return int
     */
    public function getSemaine()
    {
        return $this->container['semaine'];
    }

    /**
     * Sets semaine
     *
     * @param int $semaine semaine
     *
     * @return $this
     */
    public function setSemaine($semaine)
    {
        $this->container['semaine'] = $semaine;

        return $this;
    }

    /**
     * Gets datePremierJourSemaine
     *
     * @return \DateTime
     */
    public function getDatePremierJourSemaine()
    {
        return $this->container['datePremierJourSemaine'];
    }

    /**
     * Sets datePremierJourSemaine
     *
     * @param \DateTime $datePremierJourSemaine datePremierJourSemaine
     *
     * @return $this
     */
    public function setDatePremierJourSemaine($datePremierJourSemaine)
    {
        $this->container['datePremierJourSemaine'] = $datePremierJourSemaine;

        return $this;
    }

    /**
     * Gets lundiJour
     *
     * @return float
     */
    public function getLundiJour()
    {
        return $this->container['lundiJour'];
    }

    /**
     * Sets lundiJour
     *
     * @param float $lundiJour lundiJour
     *
     * @return $this
     */
    public function setLundiJour($lundiJour)
    {
        $this->container['lundiJour'] = $lundiJour;

        return $this;
    }

    /**
     * Gets lundiNuit
     *
     * @return float
     */
    public function getLundiNuit()
    {
        return $this->container['lundiNuit'];
    }

    /**
     * Sets lundiNuit
     *
     * @param float $lundiNuit lundiNuit
     *
     * @return $this
     */
    public function setLundiNuit($lundiNuit)
    {
        $this->container['lundiNuit'] = $lundiNuit;

        return $this;
    }

    /**
     * Gets mardiJour
     *
     * @return float
     */
    public function getMardiJour()
    {
        return $this->container['mardiJour'];
    }

    /**
     * Sets mardiJour
     *
     * @param float $mardiJour mardiJour
     *
     * @return $this
     */
    public function setMardiJour($mardiJour)
    {
        $this->container['mardiJour'] = $mardiJour;

        return $this;
    }

    /**
     * Gets mardiNuit
     *
     * @return float
     */
    public function getMardiNuit()
    {
        return $this->container['mardiNuit'];
    }

    /**
     * Sets mardiNuit
     *
     * @param float $mardiNuit mardiNuit
     *
     * @return $this
     */
    public function setMardiNuit($mardiNuit)
    {
        $this->container['mardiNuit'] = $mardiNuit;

        return $this;
    }

    /**
     * Gets mercrediJour
     *
     * @return float
     */
    public function getMercrediJour()
    {
        return $this->container['mercrediJour'];
    }

    /**
     * Sets mercrediJour
     *
     * @param float $mercrediJour mercrediJour
     *
     * @return $this
     */
    public function setMercrediJour($mercrediJour)
    {
        $this->container['mercrediJour'] = $mercrediJour;

        return $this;
    }

    /**
     * Gets mercrediNuit
     *
     * @return float
     */
    public function getMercrediNuit()
    {
        return $this->container['mercrediNuit'];
    }

    /**
     * Sets mercrediNuit
     *
     * @param float $mercrediNuit mercrediNuit
     *
     * @return $this
     */
    public function setMercrediNuit($mercrediNuit)
    {
        $this->container['mercrediNuit'] = $mercrediNuit;

        return $this;
    }

    /**
     * Gets jeudiJour
     *
     * @return float
     */
    public function getJeudiJour()
    {
        return $this->container['jeudiJour'];
    }

    /**
     * Sets jeudiJour
     *
     * @param float $jeudiJour jeudiJour
     *
     * @return $this
     */
    public function setJeudiJour($jeudiJour)
    {
        $this->container['jeudiJour'] = $jeudiJour;

        return $this;
    }

    /**
     * Gets jeudiNuit
     *
     * @return float
     */
    public function getJeudiNuit()
    {
        return $this->container['jeudiNuit'];
    }

    /**
     * Sets jeudiNuit
     *
     * @param float $jeudiNuit jeudiNuit
     *
     * @return $this
     */
    public function setJeudiNuit($jeudiNuit)
    {
        $this->container['jeudiNuit'] = $jeudiNuit;

        return $this;
    }

    /**
     * Gets vendrediJour
     *
     * @return float
     */
    public function getVendrediJour()
    {
        return $this->container['vendrediJour'];
    }

    /**
     * Sets vendrediJour
     *
     * @param float $vendrediJour vendrediJour
     *
     * @return $this
     */
    public function setVendrediJour($vendrediJour)
    {
        $this->container['vendrediJour'] = $vendrediJour;

        return $this;
    }

    /**
     * Gets vendrediNuit
     *
     * @return float
     */
    public function getVendrediNuit()
    {
        return $this->container['vendrediNuit'];
    }

    /**
     * Sets vendrediNuit
     *
     * @param float $vendrediNuit vendrediNuit
     *
     * @return $this
     */
    public function setVendrediNuit($vendrediNuit)
    {
        $this->container['vendrediNuit'] = $vendrediNuit;

        return $this;
    }

    /**
     * Gets samediJour
     *
     * @return float
     */
    public function getSamediJour()
    {
        return $this->container['samediJour'];
    }

    /**
     * Sets samediJour
     *
     * @param float $samediJour samediJour
     *
     * @return $this
     */
    public function setSamediJour($samediJour)
    {
        $this->container['samediJour'] = $samediJour;

        return $this;
    }

    /**
     * Gets samediNuit
     *
     * @return float
     */
    public function getSamediNuit()
    {
        return $this->container['samediNuit'];
    }

    /**
     * Sets samediNuit
     *
     * @param float $samediNuit samediNuit
     *
     * @return $this
     */
    public function setSamediNuit($samediNuit)
    {
        $this->container['samediNuit'] = $samediNuit;

        return $this;
    }

    /**
     * Gets dimancheJour
     *
     * @return float
     */
    public function getDimancheJour()
    {
        return $this->container['dimancheJour'];
    }

    /**
     * Sets dimancheJour
     *
     * @param float $dimancheJour dimancheJour
     *
     * @return $this
     */
    public function setDimancheJour($dimancheJour)
    {
        $this->container['dimancheJour'] = $dimancheJour;

        return $this;
    }

    /**
     * Gets dimancheNuit
     *
     * @return float
     */
    public function getDimancheNuit()
    {
        return $this->container['dimancheNuit'];
    }

    /**
     * Sets dimancheNuit
     *
     * @param float $dimancheNuit dimancheNuit
     *
     * @return $this
     */
    public function setDimancheNuit($dimancheNuit)
    {
        $this->container['dimancheNuit'] = $dimancheNuit;

        return $this;
    }

    /**
     * Gets finDeMission
     *
     * @return string
     */
    public function getFinDeMission()
    {
        return $this->container['finDeMission'];
    }

    /**
     * Sets finDeMission
     *
     * @param string $finDeMission finDeMission
     *
     * @return $this
     */
    public function setFinDeMission($finDeMission)
    {
        $this->container['finDeMission'] = $finDeMission;

        return $this;
    }

    /**
     * Gets rubriquesVariables
     *
     * @return \Evolia\Model\RubricValues[]
     */
    public function getRubriquesVariables()
    {
        return $this->container['rubriquesVariables'];
    }

    /**
     * Sets rubriquesVariables
     *
     * @param \Evolia\Model\RubricValues[] $rubriquesVariables rubriquesVariables
     *
     * @return $this
     */
    public function setRubriquesVariables($rubriquesVariables)
    {
        $this->container['rubriquesVariables'] = $rubriquesVariables;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
